services:
  postgres:
    container_name: ms_pg_sql
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: /var/lib/postgresql/data
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - microservices-net
    restart: unless-stopped

  pgadmin:
    container_name: ms_pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - 5050:80
    networks:
      - microservices-net
    restart: unless-stopped

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.3
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticvolume:/usr/share/elasticsearch/data
    networks:
      - microservices-net

  logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash:8.5.3
    ports:
      - "5044:5044"
      - "9600:9600"
    volumes:
      - ./product/logstash/config/productsync.conf:/usr/share/logstash/config/productsync.conf
      - ./product/logstash/bin/postgresql.jar:/usr/share/logstash/logstash-core/lib/jars/postgresql.jar
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    command: logstash -f /usr/share/logstash/config/productsync.conf
    networks:
      - microservices-net

  mongodb:
    image: mongo
    container_name: mongo_db
    ports:
      - 27017:27017
    volumes:
      - mongo:/data
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=pass

  mongo-express:
    image: mongo-express
    container_name: mongo_express
    restart: always
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=pass
      - ME_CONFIG_MONGODB_SERVER=mongodb
    depends_on:
      - mongodb

  redis:
    image: bitnami/redis:latest
    container_name: ms_redis
    ports:
      - 6379:6379
    volumes:
      - redis:/data
    networks:
      - microservices-net
    environment:
      - ALLOW_EMPTY_PASSWORD=yes

  keycloak:
    container_name: keycloak-ms
    image: quay.io/keycloak/keycloak:24.0.2
    ports:
      - 9098:8080
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    networks:
      - microservices-net
    command:
      - "start-dev"

networks:
  microservices-net:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  mongo:
  redis:
  elasticvolume: